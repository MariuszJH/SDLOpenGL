name: Cache SDL2 install 3

on:
  push: 
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

env:
  projectName: SDLOpenGL
  SDL_VERSION: 2.28.5

jobs:
  build-on-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Grant tar root ownership and execution (needed to untar cached objects)
      run: sudo chown root /usr/bin/tar && sudo chmod u+s /usr/bin/tar

    - name: Cache SDL2
      id: linux-SDL2-ID-installed-cache1
      uses: actions/cache@v3
      with:
        path: |
          /usr/include/SDL2
          /usr/include/x86_64-linux-gnu/SDL2
          /usr/lib/x86_64-linux-gnu/libSDL2*
          /usr/lib/x86_64-linux-gnu/cmake/SDL2
          /usr/lib/x86_64-linux-gnu/libOpenGL.so.0.0.0
          /usr/lib/x86_64-linux-gnu/libOpenGL.so.0
          /usr/include/alsa
          /usr/include/asoundlib.h
          /usr/include/sys/asoundlib.h
          /usr/lib/x86_64-linux-gnu/libasound.so
          /usr/include/GL/gl.h
          /usr/include/GL/glcorearb.h
          /usr/include/GL/glext.h
          /usr/include/KHR/khrplatform.h
          /usr/lib/x86_64-linux-gnu/libGL.so
          /usr/include/pulse
          /usr/lib/x86_64-linux-gnu/cmake/PulseAudio
          /usr/lib/x86_64-linux-gnu/libpulse-mainloop-glib.so
          /usr/lib/x86_64-linux-gnu/libpulse-simple.so
          /usr/lib/x86_64-linux-gnu/libpulse.so
          /usr/include/sndio.h
          /usr/include/dbus-1.0/dbus
          /usr/lib/x86_64-linux-gnu/cmake/DBus1
          /usr/lib/x86_64-linux-gnu/dbus-1.0/include/dbus
          /usr/lib/x86_64-linux-gnu/libdbus-1.a
          /usr/lib/x86_64-linux-gnu/libdbus-1.so
          /usr/include/libdecor-0/libdecor.h
          /usr/lib/x86_64-linux-gnu/libdecor-0.so
          /usr/include/libdrm
          /usr/include/libsync.h
          /usr/include/xf86drm.h
          /usr/include/xf86drmMode.h
          /usr/lib/x86_64-linux-gnu/libdrm.a
          /usr/lib/x86_64-linux-gnu/libdrm_amdgpu.a
          /usr/lib/x86_64-linux-gnu/libdrm_intel.a
          /usr/lib/x86_64-linux-gnu/libdrm_nouveau.a
          /usr/lib/x86_64-linux-gnu/libdrm_radeon.a
          /usr/lib/x86_64-linux-gnu/libdrm.so
          /usr/lib/x86_64-linux-gnu/libdrm_amdgpu.so
          /usr/lib/x86_64-linux-gnu/libdrm_intel.so
          /usr/lib/x86_64-linux-gnu/libdrm_nouveau.so
          /usr/lib/x86_64-linux-gnu/libdrm_radeon.so
          /usr/include/EGL/eglext_angle.h
          /usr/include/EGL/eglmesaext.h
          /usr/include/gbm.h
          /usr/lib/x86_64-linux-gnu/libgbm.so
          /usr/include/GLES
          /usr/include/GLES2
          /usr/include/GLES3
          /usr/lib/x86_64-linux-gnu/libGLESv1_CM.so
          /usr/lib/x86_64-linux-gnu/libGLESv2.so
          /usr/include/GL/glu.h
          /usr/lib/x86_64-linux-gnu/libGLU.a
          /usr/lib/x86_64-linux-gnu/libGLU.so
          /usr/include/ibus-1.0
          /usr/lib/x86_64-linux-gnu/libibus-1.0.so
          /usr/include/libudev.h
          /usr/lib/x86_64-linux-gnu/libudev.so
        key: linux-SDL2-KEY-installed-cache1

    - name: Is SDL2 not yet cached? Install SDL2
      if: steps.linux-SDL2-ID-installed-cache1.outputs.cache-hit != 'true'
      run: |
        echo sudo apt-get install --yes libsdl2-dev
        sudo apt-get install --yes libsdl2-dev

        echo NOT yet cached! Find in /usr
        find /usr/include -iname SDL.h
        find /usr/lib/x86_64-linux-gnu -iname libSDL2.a
        find /usr/lib/x86_64-linux-gnu -iname libSDL2.so
        find /usr/lib/x86_64-linux-gnu/cmake/SDL2 -iname SDL2?Config.cmake

    - name: Is SDL2 cached? Do not install SDL2!
      if: steps.linux-SDL2-ID-installed-cache1.outputs.cache-hit == 'true'
      run: |
        echo YES cached! Find in /usr
        find /usr/include -iname SDL.h
        find /usr/lib/x86_64-linux-gnu -iname libSDL2.a
        find /usr/lib/x86_64-linux-gnu -iname libSDL2.so
        find /usr/lib/x86_64-linux-gnu/cmake/SDL2 -iname SDL2?Config.cmake

    - name: Show dependencies of SDL2
      run: |
        echo apt-cache depends --installed libsdl2-dev
        apt-cache depends --installed libsdl2-dev

    - name: Show dependencies of SDL2 in more detail
      run: |
        packages=(
          libsdl2-dev 
          libasound2-dev
          libdbus-1-dev
          libdecor-0-dev
          libdrm-dev
          libegl1-mesa-dev
          libgbm-dev
          libgl-dev
          libgles-dev
          libglu1-mesa-dev
          libibus-1.0-dev
          libpulse-dev
          libsdl2-2.0-0
          libsndio-dev
          libudev-dev
          libwayland-dev
          libx11-dev
          libxcursor-dev
          libxext-dev
          libxfixes-dev
          libxi-dev
          libxinerama-dev
          libxkbcommon-dev
          libxrandr-dev
          libxss-dev
          libxt-dev
          libxv-dev
          libxxf86vm-dev
          libc6
          libopengl0
          libx11-6
        )

        for package in "${packages[@]}"; do
          echo Caching "$package"
          sudo dpkg -L "$package" | while IFS= read -r f; do if test -f $f; then echo $f; fi; done
        done

    # - name: Is SDL2 cached? Do not install SDL2!
    #   if: steps.linux-SDL2-ID-installed-cache1.outputs.cache-hit == 'true'
    #   run: |
    #     echo ls ~/SDL2/usr/lib/x86_64-linux-gnu
    #     ls ~/SDL2/usr/lib/x86_64-linux-gnu
    #     echo sudo cp --verbose --force --recursive ~/SDL2/* /
    #     sudo cp --verbose --force --recursive ~/SDL2/* /
    #     echo AFTER: ls /usr/lib/x86_64-linux-gnu
    #     ls /usr/lib/x86_64-linux-gnu

    #     echo YES cached! Find in /usr
    #     find /usr/ -iname SDL.h
    #     find /usr/ -iname libSDL2.a
    #     find /usr/ -iname libSDL2.so
    #     find /usr/ -iname SDL2?Config.cmake

    #     echo apt-cache depends --installed libsdl2-dev
    #     apt-cache depends --installed libsdl2-dev

    # - name: Is SDL2 not yet cached? Install SDL2 and cache it!
    #   if: steps.linux-SDL2-ID-installed-cache1.outputs.cache-hit != 'true'
    #   run: |
    #     echo sudo apt-get install --yes libsdl2-dev
    #     sudo apt-get install --yes libsdl2-dev

    #     echo Move installed SDL2 and its dependencies from /usr into ~/SDL2/usr
    #     mkdir -p ~/SDL2

    #     packages=(
    #       libsdl2-dev 
    #       libasound2-dev
    #       libdbus-1-dev
    #       libdecor-0-dev
    #       libdrm-dev
    #       libegl1-mesa-dev
    #       libgbm-dev
    #       libgl-dev
    #       libgles-dev
    #       libglu1-mesa-dev
    #       libibus-1.0-dev
    #       libpulse-dev
    #       libsdl2-2.0-0
    #       libsndio-dev
    #       libudev-dev
    #       libwayland-dev
    #       libx11-dev
    #       libxcursor-dev
    #       libxext-dev
    #       libxfixes-dev
    #       libxi-dev
    #       libxinerama-dev
    #       libxkbcommon-dev
    #       libxrandr-dev
    #       libxss-dev
    #       libxt-dev
    #       libxv-dev
    #       libxxf86vm-dev
    #       libc6
    #       libopengl0
    #       libx11-6
    #     )

    #     for package in "${packages[@]}"; do
    #       echo Caching "$package"
    #       sudo dpkg -L "$package" | while IFS= read -r f; do if test -f $f; then echo $f; fi; done
    #     done

    #     for package in "${packages[@]}"; do
    #       echo Caching "$package"
    #       sudo dpkg -L "$package" | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/SDL2/
    #     done

    #     echo NO not yet cached! Find in ~/SDL2/usr
    #     find ~/SDL2/usr/ -iname SDL.h
    #     find ~/SDL2/usr/ -iname libSDL2.a
    #     find ~/SDL2/usr/ -iname libSDL2.so
    #     find ~/SDL2/usr/ -iname SDL2?Config.cmake

    #     echo Also find in /usr
    #     find /usr/ -iname SDL.h
    #     find /usr/ -iname libSDL2.a
    #     find /usr/ -iname libSDL2.so
    #     find /usr/ -iname SDL2?Config.cmake
        
    - name: CMake configure --- Ninja, Gnu, Debug
      run: |
        echo cmake --preset Ninja-Gnu-Debug
        cmake --preset Ninja-Gnu-Debug

    - name: CMake build --- Ninja, Gnu, Debug
      run: |
        echo cmake --build --preset Ninja-Gnu-Debug
        cmake --build  --preset Ninja-Gnu-Debug
